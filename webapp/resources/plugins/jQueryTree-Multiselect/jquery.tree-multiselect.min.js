/* jQuery Tree Multiselect v1.11.1 | (c) Patrick Tsai | MIT Licensed */
!function (a) {
    function b(b) {
        return a(b).clone().children().remove().end().text()
    }

    function c(b) {
        var c = {
            allowBatchSelection: !0,
            sortable: !1,
            collapsible: !0,
            sectionDelimiter: "/",
            showSectionOnSelected: !0,
            startCollapsed: !1
        };
        return a.extend({}, c, b)
    }

    function d(b, c) {
        function d(b, c) {
            for (var d = f, e = 0; e < b.length; ++e) {
                var g = b[e];
                if (d[g] || (d[g] = []), d = d[g], e == b.length - 1) {
                    d.push(c);
                    break
                }
                g = b[e + 1];
                for (var h = null, i = 0; i < d.length; ++i) {
                    var j = d[i];
                    if (j.constructor != p && a.isPlainObject(j) && j[g] && "undefined" != typeof j[g]) {
                        h = j;
                        break
                    }
                }
                if (h)d = h; else {
                    var k = d.push({});
                    d = d[k - 1]
                }
            }
        }

        var f = {};
        a(b).find("> option").each(function () {
            var b = a(this).attr("data-section").split(n.sectionDelimiter), c = a(this).val(), e = a(this).text(), f = a(this).attr("data-description"), g = a(this).attr("data-index"), h = new p(c, e, f, g);
            d(b, h)
        }), e.call(c, f)
    }

    function e(b) {
        function c(b) {
            var c = document.createElement("div");
            c.className = "section";
            var d = document.createElement("div");
            return d.className = "title", d.innerHTML = b, a(c).append(d), a(this).append(c), c
        }

        function d(b) {
            var c = b.text, d = b.value, e = b.description, f = b.index, g = document.createElement("div");
            g.className = "item", a(g).text(c || d).attr({
                "data-value": d,
                "data-description": e,
                "data-index": f
            }), a(this).append(g)
        }

        if (b.constructor == p)d.call(this, b); else if (a.isArray(b))for (var f = 0; f < b.length; ++f)e.call(this, b[f]); else if ("object" == typeof b) {
            for (var g in b)if (b.hasOwnProperty(g)) {
                var h = c.call(this, g);
                e.call(h, b[g])
            }
        } else d.call(this, b)
    }

    function f(b) {
        var c = a("<span class='description'>?</span>"), d = a(b).find("div.item[data-description!=''][data-description]");
        c.prependTo(d), a("div.item > span.description").unbind().mouseenter(function () {
            var b = a(this).parent(), c = b.attr("data-description"), d = document.createElement("div");
            d.className = "temp-description-popup", d.innerHTML = c, d.style.position = "absolute", b.append(d)
        }).mouseleave(function () {
            a("div.temp-description-popup").remove()
        })
    }

    function g(b) {
        var c = a("<input />", {type: "checkbox"}), d = null;
        d = n.allowBatchSelection ? a(b).find("div.title, div.item") : a(b).find("div.item"), c.prependTo(d), a(b).find("input[type=checkbox]").click(function (a) {
            a.stopPropagation()
        })
    }

    function h(b, c) {
        var d = a(b).val();
        if (d)for (var e = 0; e < d.length; ++e) {
            var f = d[e], g = a(c).find("div.item").filter(function () {
                var b = a(this);
                return b.attr("data-value") === f
            });
            a(g).find("> input[type=checkbox]").prop("checked", !0)
        }
    }

    function i(b) {
        var c = a(b).find("div.title > input[type=checkbox]");
        c.change(function () {
            var b = a(this).closest("div.section"), c = b.find("input[type=checkbox]"), d = a(this).is(":checked");
            c.prop("checked", d)
        })
    }

    function j(b) {
        var c = a(b).find("input[type=checkbox]");
        c.change(function () {
            if (!a(this).is(":checked")) {
                var b = a(this).parents("div.section");
                b.find("> div.title > input[type=checkbox]").prop("checked", !1)
            }
        })
    }

    function k(b) {
        var c = "-", d = "+", e = a(b).find("div.title"), f = document.createElement("span");
        f.className = "collapse-section", n.startCollapsed ? (a(f).text(d), e.siblings().toggle()) : a(f).text(c), e.prepend(f), a("span.collapse-section").unbind().click(function (b) {
            b.stopPropagation();
            var e = a(this).text();
            a(this).text(e == c ? d : c);
            var f = a(this).parent();
            f.siblings().toggle()
        }), e.click(function () {
            a(this).find("> span.collapse-section").trigger("click")
        })
    }

    function l(c, d, e) {
        function f(b) {
            var c = b.text, e = b.value, f = b.sectionName, g = document.createElement("div");
            g.className = "item", g.innerHTML = c, n.showSectionOnSelected && a(g).append("<span class='selectedSectionName'>" + f + "</span>"), a(g).attr("data-value", e).prepend("<span class='remove-selected'>Ã—</span>").appendTo(d)
        }

        function g(e) {
            var g = [];
            a(d).find("div.item").each(function () {
                g.push(b(this))
            });
            var h = e.filter(function (a) {
                return -1 == g.indexOf(a.text)
            });
            h.forEach(function (a) {
                f(a)
            }), m(c, d)
        }

        function h(c) {
            var e = [];
            c.forEach(function (a) {
                e.push(a.text)
            }), a(d).find("div.item").each(function () {
                var c = b(this);
                -1 == e.indexOf(c) && a(this).remove()
            })
        }

        function i() {
            var b = a(e), c = [];
            a(d).find("div.item").each(function () {
                c.push(a(this).attr("data-value"))
            }), b.val(c), a(e).html(a(e).find("option").sort(function (b, d) {
                var e = c.indexOf(a(b).attr("value")), f = c.indexOf(a(d).attr("value"));
                return e > f ? 1 : f > e ? -1 : 0
            }))
        }

        function j() {
            var e = a(c).find("div.item").has("> input[type=checkbox]:checked"), f = [];
            if (e.each(function (c) {
                    var d = b(this), e = a(this).attr("data-value"), g = a(this).attr("data-index");
                    a(this).attr("data-index", void 0);
                    var h = a.map(a(this).parents("div.section").get().reverse(), function (c) {
                        return b(a(c).find("> div.title"))
                    }).join("/");
                    f.push({text: d, value: e, index: g, sectionName: h})
                }), f.sort(function (a, b) {
                    return a.index > b.index ? 1 : a.index < b.index ? -1 : 0
                }), g(f), h(f), i(), n.sortable) {
                var j = a(d);
                j.sortable({
                    update: function (a, b) {
                        i()
                    }
                })
            }
        }

        var k = a(c).find("input[type=checkbox]");
        k.change(function () {
            j()
        }), j()
    }

    function m(b, c) {
        a(c).find("span.remove-selected").unbind().click(function () {
            var c = a(this).parent().attr("data-value"), d = a(b).find("div.item[data-value='" + c + "']"), e = d.find("> input[type=checkbox]");
            e.prop("checked", !1), e.trigger("change")
        })
    }

    var n;
    a.fn.treeMultiselect = function (b) {
        return n = c(b), this.each(function () {
            var b = a(this);
            b.attr("multiple", "").css("display", "none");
            var c = new o;
            c.build(b);
            var e = c.selections;
            d(b, e), f(e), g(e), h(b, e), i(e), j(e), n.collapsible && k(e);
            var p = c.selected;
            l(e, p, b), m(e, p)
        }), this
    };
    var o = function () {
    };
    o.prototype.build = function (b) {
        var c = document.createElement("div");
        c.className = "tree-multiselect", a(b).after(c);
        var d = document.createElement("div");
        d.className = "selections", a(c).append(d);
        var e = document.createElement("div");
        e.className = "selected", a(c).append(e), this.tree = c, this.selections = d, this.selected = e
    };
    var p = function (a, b, c, d) {
        this.value = a, this.text = b, this.description = c, this.index = d
    }
}(jQuery);